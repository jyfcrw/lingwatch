<style>
  html,
  body {
    height: 100%;
    overflow: hidden;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
  }
  .mui-content {
    height: 100%;
    padding: 44px 0px 0px 0px;
    overflow: auto;
    background-color: #eaeaea;
  }
  #msg-list {
    height: 100%;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }
  .msg-item {
    padding: 8px;
    clear: both;
  }
  .msg-item .mui-item-clear {
    clear: both;
  }
  .msg-item .msg-user {
    width: 42px;
    height: 42px;
    border: solid 1px #d3d3d3;
    display: inline-block;
    background: #fff;
    border-radius: 1px;
    vertical-align: top;
    text-align: center;
    float: left;
    padding: 5px;
    color: #bbb;
    font-size: 30px;
  }
  .msg-item .msg-content {
    display: inline-block;
    border-radius: 10px;
    border: solid 1px #d3d3d3;
    background-color: #FFFFFF;
    color: #333;
    padding: 10px;
    vertical-align: top;
    font-size: 15px;
    position: relative;
    margin: 0px 10px;
    max-width: 75%;
    min-width: 35px;
    float: left;
  }
  .msg-item .msg-content .msg-content-inner {
    overflow-x: hidden;
    word-wrap: break-word;
    word-break:normal;
  }
  .msg-item .msg-content .msg-content-arrow {
    position: absolute;
    border: solid 1px #d3d3d3;
    border-right: none;
    border-top: none;
    background-color: #FFFFFF;
    width: 10px;
    height: 10px;
    left: -6px;
    top: 15px;
    -webkit-transform: rotateZ(45deg);
    transform: rotateZ(45deg);
  }
  .msg-item-self .msg-user,
  .msg-item-self .msg-content {
    float: right;
  }
  .msg-item-self .msg-content .msg-content-arrow {
    left: auto;
    right: -5px;
    -webkit-transform: rotateZ(225deg);
    transform: rotateZ(225deg);
  }
  .msg-item-self .msg-content,
  .msg-item-self .msg-content .msg-content-arrow {
    background-color: #4CD964;
    color: #fff;
    border-color: #2AC845;
  }
</style>

<header class="mui-bar mui-bar-nav">
  <%= link_to dialogue_path, class: "mui-fackaction-back mui-icon mui-icon-left-nav mui-pull-left" do %><% end %>
  <a class="mui-fackaction-back mui-icon mui-icon-refresh mui-pull-right" onclick="javascript:window.location.reload();"></a>

  <h1 class="mui-title">
    <span id="dialogue-state" class="dialogue-state">准备连接</span>
    <span class="blink">.</span><span class="blink delay-1">.</span><span class="blink delay-2">.</span>
  </h1>
</header>

<script id='msg-template' type="text/template">
  {{ each record }}
    <div class="msg-item {{ $value.sender == 'self' ? ' msg-item-self' : '' }}" msg-type='{{ $value.type }}' msg-content='{{ $value.content }}'>
      <!-- <i class="msg-user mui-icon mui-icon-person"></i> -->
      <div class="msg-content">
        <div class="msg-content-inner">
          {{ if $value.type == 'text' }}
            {{ $value.content || '&nbsp;&nbsp;' }}
          {{ else if $value.type == 'image' }}
            <img class="msg-content-image" src="{{ $value.content }}" style="max-width: 100px;" />
          {{ else if $value.type == 'sound' }}
            <span class="mui-icon mui-icon-mic" style="font-size: 18px;font-weight: bold;"></span>
            <span class="play-state">点击播放</span>
          {{/if}}
        </div>
        <div class="msg-content-arrow"></div>
      </div>
      <div class="mui-item-clear"></div>
    </div>
  {{/each}}
</script>

<div class="mui-content">
  <div id='msg-list'>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
  (function($, doc) {
    $.init({
      gestureConfig: {
        tap: true,
        doubletap: true,
        longtap: true,
        swipe: true,
        drag: true,
      }
    });

    template.config('escape', false);

    window.msgRecord = [];
    // if (localStorage.msgRecordData) {
      // msgRecord = JSON.parse(localStorage.msgRecordData);
    // }

    var ui = {
      body: doc.querySelector('body'),
      areaMsgList: doc.querySelector('#msg-list'),
      dialogueState: doc.querySelector("#dialogue-state"),
      content: doc.querySelector('.mui-content')
    };

    var msgItemTap = function(msgItem, event) {
      var msgType = msgItem.getAttribute('msg-type');
      var msgContent = msgItem.getAttribute('msg-content')
      // if (msgType == 'sound') {
      //   player = plus.audio.createPlayer(msgContent);
      //   var playState = msgItem.querySelector('.play-state');
      //   playState.innerText = '正在播放...';
      //   player.play(function() {
      //     playState.innerText = '点击播放';
      //   }, function(e) {
      //     playState.innerText = '点击播放';
      //   });
      // }
    };

    var imageViewer = new $.ImageViewer('.msg-content-image', {
      dbl: false
    });

    var bindMsgList = function() {
      ui.areaMsgList.innerHTML = template('msg-template', {
        "record": msgRecord
      });
      var msgItems = ui.areaMsgList.querySelectorAll('.msg-item');
      [].forEach.call(msgItems, function(item, index) {
        item.addEventListener('tap', function(event) {
          msgItemTap(item, event);
        }, false);
      });
      imageViewer.findAllImage();
      ui.areaMsgList.scrollTop = ui.areaMsgList.scrollHeight + ui.areaMsgList.offsetHeight;

      localStorage.msgRecordData = JSON.stringify(msgRecord)
    };
    bindMsgList();

    window.addEventListener('resize', function() {
      ui.areaMsgList.scrollTop = ui.areaMsgList.scrollHeight + ui.areaMsgList.offsetHeight;
    }, false);

    // window.testSend = function(msg) {
    //   msgRecord.push(msg);
    //   bindMsgList();
    // };

    var sender   = "<%= @dialogue %>",
      client,
      channel  = "<%= @dialogue.full_topic_name %>",
      clientId = "browser_" + Math.floor(Math.random() * 100000);

    client = new Paho.MQTT.Client(location.hostname, 1885, clientId);
    client.onConnectionLost = onConnectionLost;
    client.onMessageArrived = onMessageArrived;
    client.connect({
      onSuccess:onSuccess,
      onFailure :onFailure,
      userName: "<%= @browser.username %>",
      password: "<%= @browser.password %>"
    });

    function onSuccess() {
      console.log("connected");
      client.subscribe(channel);
      ui.dialogueState.innerHTML = "接收会话中";
    }

    function onFailure() {
      console.log("connecting failed");
      ui.dialogueState.innerHTML= "会话连接失败";
    }

    function onConnectionLost(responseObject) {
      if (responseObject.errorCode !== 0) {
        console.log("connection lost:"+responseObject.errorMessage);
        ui.dialogueState.innerHTML = "会话断开";
      }
    }

    function onMessageArrived(message) {
      msgRecord.push({
        sender: sender,
        type: 'text',
        content: message.payloadString
      });
      bindMsgList();
    }
  }(mui, document));
</script>